/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TransactionsRouteImport } from './routes/transactions'
import { Route as PortfolioRouteImport } from './routes/portfolio'
import { Route as NftsRouteImport } from './routes/nfts'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketCategoryIndexRouteImport } from './routes/market/$category/index'
import { Route as MarketCategorySymbolRouteImport } from './routes/market/$category/$symbol'

const TransactionsRoute = TransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRouteImport,
} as any)
const PortfolioRoute = PortfolioRouteImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => rootRouteImport,
} as any)
const NftsRoute = NftsRouteImport.update({
  id: '/nfts',
  path: '/nfts',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketCategoryIndexRoute = MarketCategoryIndexRouteImport.update({
  id: '/market/$category/',
  path: '/market/$category/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketCategorySymbolRoute = MarketCategorySymbolRouteImport.update({
  id: '/market/$category/$symbol',
  path: '/market/$category/$symbol',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/nfts': typeof NftsRoute
  '/portfolio': typeof PortfolioRoute
  '/transactions': typeof TransactionsRoute
  '/market/$category/$symbol': typeof MarketCategorySymbolRoute
  '/market/$category': typeof MarketCategoryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/nfts': typeof NftsRoute
  '/portfolio': typeof PortfolioRoute
  '/transactions': typeof TransactionsRoute
  '/market/$category/$symbol': typeof MarketCategorySymbolRoute
  '/market/$category': typeof MarketCategoryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/nfts': typeof NftsRoute
  '/portfolio': typeof PortfolioRoute
  '/transactions': typeof TransactionsRoute
  '/market/$category/$symbol': typeof MarketCategorySymbolRoute
  '/market/$category/': typeof MarketCategoryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/nfts'
    | '/portfolio'
    | '/transactions'
    | '/market/$category/$symbol'
    | '/market/$category'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/nfts'
    | '/portfolio'
    | '/transactions'
    | '/market/$category/$symbol'
    | '/market/$category'
  id:
    | '__root__'
    | '/'
    | '/nfts'
    | '/portfolio'
    | '/transactions'
    | '/market/$category/$symbol'
    | '/market/$category/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NftsRoute: typeof NftsRoute
  PortfolioRoute: typeof PortfolioRoute
  TransactionsRoute: typeof TransactionsRoute
  MarketCategorySymbolRoute: typeof MarketCategorySymbolRoute
  MarketCategoryIndexRoute: typeof MarketCategoryIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/portfolio': {
      id: '/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nfts': {
      id: '/nfts'
      path: '/nfts'
      fullPath: '/nfts'
      preLoaderRoute: typeof NftsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market/$category/': {
      id: '/market/$category/'
      path: '/market/$category'
      fullPath: '/market/$category'
      preLoaderRoute: typeof MarketCategoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market/$category/$symbol': {
      id: '/market/$category/$symbol'
      path: '/market/$category/$symbol'
      fullPath: '/market/$category/$symbol'
      preLoaderRoute: typeof MarketCategorySymbolRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NftsRoute: NftsRoute,
  PortfolioRoute: PortfolioRoute,
  TransactionsRoute: TransactionsRoute,
  MarketCategorySymbolRoute: MarketCategorySymbolRoute,
  MarketCategoryIndexRoute: MarketCategoryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
