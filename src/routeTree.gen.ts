/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TransactionsRouteImport } from './routes/transactions'
import { Route as PortfolioRouteImport } from './routes/portfolio'
import { Route as NftRouteImport } from './routes/nft'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketIndexRouteImport } from './routes/market/index'
import { Route as MarketSymbolRouteImport } from './routes/market/$symbol'

const TransactionsRoute = TransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRouteImport,
} as any)
const PortfolioRoute = PortfolioRouteImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => rootRouteImport,
} as any)
const NftRoute = NftRouteImport.update({
  id: '/nft',
  path: '/nft',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketIndexRoute = MarketIndexRouteImport.update({
  id: '/market/',
  path: '/market/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketSymbolRoute = MarketSymbolRouteImport.update({
  id: '/market/$symbol',
  path: '/market/$symbol',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/nft': typeof NftRoute
  '/portfolio': typeof PortfolioRoute
  '/transactions': typeof TransactionsRoute
  '/market/$symbol': typeof MarketSymbolRoute
  '/market': typeof MarketIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/nft': typeof NftRoute
  '/portfolio': typeof PortfolioRoute
  '/transactions': typeof TransactionsRoute
  '/market/$symbol': typeof MarketSymbolRoute
  '/market': typeof MarketIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/nft': typeof NftRoute
  '/portfolio': typeof PortfolioRoute
  '/transactions': typeof TransactionsRoute
  '/market/$symbol': typeof MarketSymbolRoute
  '/market/': typeof MarketIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/nft'
    | '/portfolio'
    | '/transactions'
    | '/market/$symbol'
    | '/market'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/nft'
    | '/portfolio'
    | '/transactions'
    | '/market/$symbol'
    | '/market'
  id:
    | '__root__'
    | '/'
    | '/nft'
    | '/portfolio'
    | '/transactions'
    | '/market/$symbol'
    | '/market/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NftRoute: typeof NftRoute
  PortfolioRoute: typeof PortfolioRoute
  TransactionsRoute: typeof TransactionsRoute
  MarketSymbolRoute: typeof MarketSymbolRoute
  MarketIndexRoute: typeof MarketIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/portfolio': {
      id: '/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nft': {
      id: '/nft'
      path: '/nft'
      fullPath: '/nft'
      preLoaderRoute: typeof NftRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market/': {
      id: '/market/'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market/$symbol': {
      id: '/market/$symbol'
      path: '/market/$symbol'
      fullPath: '/market/$symbol'
      preLoaderRoute: typeof MarketSymbolRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NftRoute: NftRoute,
  PortfolioRoute: PortfolioRoute,
  TransactionsRoute: TransactionsRoute,
  MarketSymbolRoute: MarketSymbolRoute,
  MarketIndexRoute: MarketIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
